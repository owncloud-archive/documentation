# This an example of a config file:

# See slapd.conf(5)

# Global Directives:

# Schema and objectClass definitions

include         /etc/ldap/schema/core.schema
include         /etc/ldap/schema/cosine.schema
include         /etc/ldap/schema/nis.schema
include         /etc/ldap/schema/inetorgperson.schema

# Where the pid file is put. The init.d script
# will not stop the server if you change this.

pidfile         /var/run/slapd/slapd.pid

# List of arguments that were passed to the server

argsfile        /var/run/slapd/slapd.args

# Read slapd.conf(5) for possible values
# Change loglevel to "any" if you want to see everything.

loglevel        none

# Where the dynamically loaded modules are stored

modulepath      /usr/lib/ldap

# Here are the recommended modules:

# module for the target ldap-server

moduleload	back_ldap.la

# module for your local database

moduleload	back_hdb.la

# module for rewriting attributes

moduleload	rwm

# caching module

moduleload	pcache.la

# module to enable memberof in LDAP

moduleload memberof.la


# The maximum number of entries that is returned for a search operation

sizelimit 500

# The tool-threads parameter sets the actual amount of cpu's that is used
# for indexing.

tool-threads 1


# Type of backend, for example "ldap"

backend         ldap

# Type of database

database		ldap


# If you only have read access, set this to "yes"

readonly        yes

# Set which protocol to use, we suggest "3"

protocol-version  3

# remember bind credentials

rebind-as-user

# If you want to save time and don't want to list all the refferals, set to "yes"

norefs  yes

# Same as above

chase-referrals no

# Specify the URL of your ldap server and the port.
# For unencrypted access use the port 389, for encrypted 636
# If you have to use 636, you will also probably have to import
# the certificate of your target server. restart your webserver after you do.

uri "ldap://192.168.178.2:389"

# The base of your directory in database, for example "dc=ldap01,dc=com"
suffix          "dc=ldap01,dc=com"

# rootdn directive for specifying a superuser on the database.
# If you don't have access to the admin user, use the one you have.

rootdn          "cn=admin,dc=ldap01,dc=com"

# Now we start initialising the modules
# First the rewrite module

overlay         rwm

# Now we rewrite the attributes

rwm-map         attribute uid sAMAccountName
rwm-map         attribute dn distinguishedName

# Next one is optional, if you want memberof, for the groups,
# you have to load it.

overlay         memberof

# Now we load the caching module

overlay pcache

# The directive enables proxy caching
# See slapo-pcache

# pcache <database> <max_entries> <numattrsets> <entry_limit> <cc_period> 
# Parameters:
# 
# <database> for cached entries. 
# <max_entries> when reached - cache replacement is invoked
# <numattrsets> = pcacheAttrset
# <entry_limit> limit to the number of entries returned 
# <cc_period> Consistency check time to wait

pcache hdb 100000 3 1000 100

# pcachePersist { TRUE | FALSE }
# Write cached results into the database
# Results remain in database after restart

pcachePersist TRUE

# Where the database file are physically stored for database #1

directory       "/var/lib/ldap"

# Caching templates for general search

# pcacheAttrset <index> <attrs...>
# First set the index number
# Then set the attribute to cache

pcacheAttrset   0 1.1

# pcacheTemplate <template_string> <attrset_index> <ttl>
# First define the querry sting to cache
# Then reference the Attrset
# Last set the time-to-live

pcacheTemplate  (&(|(objectClass=))) 0 3600

pcacheTemplate (objectClass=*) 0 3600

# User Name Field (Advanced Tab)

pcacheAttrset   1 displayname
pcacheTemplate (objectClass=*) 1 3600

# Group Field

pcacheAttrset   2 memberOf
pcacheTemplate (objectClass=*) 2 3600


# This an example of a config file:

# See slapd.conf(5)

# Global Directives:

# Schema and objectClass definitions

include         /etc/ldap/schema/core.schema
include         /etc/ldap/schema/cosine.schema
include         /etc/ldap/schema/nis.schema
include         /etc/ldap/schema/inetorgperson.schema

# Where the pid file is put. The init.d script
# will not stop the server if you change this.

pidfile         /var/run/slapd/slapd.pid

# List of arguments that were passed to the server

argsfile        /var/run/slapd/slapd.args

# Read slapd.conf(5) for possible values
# Change loglevel to "any" if you want to see everything.

loglevel        none

# Where the dynamically loaded modules are stored

modulepath      /usr/lib/ldap

# Here are the recommended modules:

# module for the target ldap-server

moduleload	back_ldap.la

# module for your local database

moduleload	back_hdb.la

# module for rewriting attributes

moduleload	rwm

# caching module

moduleload	pcache.la

# module to enable memberof in LDAP

moduleload memberof.la


# The maximum number of entries that is returned for a search operation

sizelimit 500

# The tool-threads parameter sets the actual amount of cpu's that is used
# for indexing.

tool-threads 1


# Type of backend, for example "ldap"

backend         ldap

# If you only have read access, set this to "yes"

readonly        yes

# Set which protocol to use, we suggest "3"

protocol-version  3

# remember bind credentials

rebind-as-user

# If you want to save time and don't want to list all the refferals, set to "yes"

norefs  yes

# Same as above

chase-referrals no

# Specify the URL of your ldap server and the port.
# For unencrypted access use the port 389, for encrypted 636
# If you have to use 636, you will also probably have to import
# the certificate of your target server. 
# Restart your webserver after you do.

uri "ldap://192.168.178.2:389"

# The base of your directory in database, for example "dc=ldap01,dc=com"
suffix          "dc=ldap01,dc=com"

# rootdn directive for specifying a superuser on the database.
# If you don't have access to the admin user, use the one you have.

rootdn          "cn=admin,dc=ldap01,dc=com"

# Now we start initialising the modules
# First the rewrite module

overlay         rwm

# Now we rewrite the attributes

rwm-map         attribute uid sAMAccountName
rwm-map         attribute dn distinguishedName

# Next one is optional, if you want memberof, for the groups,
# you have to load it.

overlay         memberof

# Now we load the caching module

overlay pcache

# The directive enables proxy caching
# See slapd-pcache

# pcache <database> <max_entries> <numattrsets> <entry_limit> <cc_period> 
# Parameters:
# 
# <database> for cached entries. 
# <max_entries> when reached - cache replacement is invoked
# <numattrsets> = pcacheAttrset
# <entry_limit> limit to the number of entries returned 
# <cc_period> Consistency check time to wait

pcache hdb 100000 3 1000 100

# pcachePersist { TRUE | FALSE }
# Write cached results into the database
# Results remain in database after restart

pcachePersist TRUE

# Where the database file are physically stored for database #1

directory       "/var/lib/ldap"

# Caching templates for general search

# pcacheAttrset <index> <attrs...>
# First set the index number
# Then set the attribute to cache

pcacheAttrset   0 1.1

# pcacheTemplate <template_string> <attrset_index> <ttl>
# First define the query string to cache
# Then reference the Attrset
# Last set the time-to-live

pcacheTemplate  (&(|(objectClass=))) 0 3600

pcacheTemplate (objectClass=*) 0 3600

# User Name Field (Advanced Tab)

pcacheAttrset   1 displayname
pcacheTemplate (objectClass=*) 1 3600

# Group Field

pcacheAttrset   2 memberOf
pcacheTemplate (objectClass=*) 2 3600
